# coding=utf-8
# script param whoismrrobot.com 80,8080
import argparse
import socket
from threading import Thread, Semaphore

thread_lock = Semaphore()


def connect(tgt_host, tgt_port):
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(2)
        sock.connect((tgt_host, tgt_port))
        thread_lock.acquire()
        print('[*] Port {} open'.format(tgt_port))
        try:
            sock.send(b'ff')
            res = sock.recv(1024).decode()
            print("[*] Returned banner " + res)
        except:
            print("[*] Can't query for banner ")
    except:
        thread_lock.acquire()
        print('[*] Port {} closed'.format(tgt_port))
    finally:
        thread_lock.release()
        sock.close()

def main():
    parser = argparse.ArgumentParser()

    parser.add_argument('tgtHost', type=str)
    parser.add_argument('tgtPort', type=str)

    args = parser.parse_args()
    tgt_host = args.tgtHost
    tgt_port = args.tgtPort

    if (tgt_host is None) | (tgt_port is None):
        print(parser.print_help())
        exit(0)
    else:
        print("Scanning " + tgt_host, "- ports: " + tgt_port)
    try:
        print("IP of " + tgt_host + " is " + socket.gethostbyname(tgt_host))
    except:
        print("Can not resolve {}".format(tgt_host))
    for port in tgt_port.split(','):
        t = Thread(target=connect, args=(tgt_host, int(port)))
        t.start()


if __name__ == '__main__':
    main()
