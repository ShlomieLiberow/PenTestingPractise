# basic banner grab script which checks returned banner against external vulnerability list

import os
import socket
import sys


def read_banner_list(path):
    with open(path) as f:
        lines = f.read().splitlines()
        return lines


def file_path():
    if len(sys.argv) == 2:
        filename = sys.argv[1]
        if not os.path.isfile(filename):
            print("File Dannay exist")
            exit()
        if not os.access(filename, os.R_OK):
            print("File canney be accessed")
            exit()
        print("User File supplied " + filename)
    else:
        filename = "Violent_Python_Banner_List.txt"
    return filename


def banner_grab(address, port):
    try:
        s = socket.socket()
        s.settimeout(2)
        s.connect((address, port))
    except Exception as e:
        print("[*] Can't connect to specified address. Check Internet and target status." + "\n" + str(e))
        exit()
    ans = s.recv(1024).decode()
    print("[*]Returned banner " + ans)
    return ans


def check_val(ans, banner):
    if banner in ans:
        print('[*]Oh, crackalackle!')
        return True
    else:
        return False


def main():
    ADDRESS_WORKING = "192.168.140.128"
    PORT = 21
    banner = banner_grab(ADDRESS_WORKING, PORT)

    filename = file_path()
    banner_list = read_banner_list(filename)
    for bannerStr in banner_list:
        vulnerable = check_val(banner, bannerStr)
        print("[*]vulnerable status: " + str(bool(vulnerable)) + " - " + banner)


if __name__ == '__main__':
    main()
