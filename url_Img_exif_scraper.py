# coding=utf-8
import pprint
import re

import requests
from PIL import Image
from PIL.ExifTags import TAGS
from bs4 import BeautifulSoup


def extract_img_list(url):
    response = requests.get(url)
    html_response_parser = BeautifulSoup(response.content, 'html.parser')
    img_list = html_response_parser.findAll('img')
    print('[*] Image links found: ' + str(len(img_list)))
    return img_list


def image_download(image, tracker):
    extract_src_tag = image.attrs['src']
    print(extract_src_tag)
    p = re.compile(r'https?:')  # Check it is not a relative URL
    valid_url = re.search(p, extract_src_tag)
    img_file_name = str(tracker) + '.jpg'
    if valid_url:
        single_image_download = requests.get(extract_src_tag)
        print(' [*] Downloading image...' + str(tracker))
        with open(img_file_name, 'wb') as f:
            for chunk in single_image_download.iter_content():
                f.write(chunk)
    else:
        print("[*] Using relative URL and I subscribe to the 'Feature not Bug' school of thought on a Sat..")


def extract_exif(tracker):
    exifData = {}
    img_file_name = str(tracker) + '.jpg'
    try:
        pil = Image.open(img_file_name)
        info = pil._getexif()
    except:
        return
    if info:
        for (tag, value) in info.items():
            decoded = TAGS.get(tag, tag)  # If it can't Maps EXIF tag, it returns orig tag value.
            exifData[decoded] = value
    if 59932 in exifData.keys():  # Removing large values which serve no useful data
        del exifData[59932]
    if 40093 in exifData.keys():
        del exifData[40093]
    if 'UserComment' in exifData.keys():
        del exifData['UserComment']
    print('[*] File name : ' + img_file_name)
    pprint.pprint(exifData)


def main():
    file_name_tracker = 0
    URL = 'http://www.themignonnes.com/'
    img_list = extract_img_list(URL)
    for img in img_list:
        image_download(img, file_name_tracker)
        file_name_tracker += 1
    for value in range(file_name_tracker):
        extract_exif(value)


if __name__ == '__main__':
    main()
