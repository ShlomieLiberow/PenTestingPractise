# coding=utf-8
import pexpect

bot_array = []
PROMPT = ['# ', '>>> ', '> ', '\$ ']


class Client:
    def __init__(self, host, user, password):
        self.host = host
        self.user = user
        self.password = password
        self.session = self.connect()

    def connect(self):
        ssh_newkey = 'Are you sure you want to continue connecting'

        conn_str = 'ssh ' + self.user + '@' + self.host
        child = pexpect.spawn(conn_str)
        ret = child.expect([pexpect.TIMEOUT, ssh_newkey, '[P|p]assword:'])
        if ret == 0:
            print('[-] Error Connecting')
            return
        if ret == 1:
            child.sendline('yes')
            ret_inner = child.expect([pexpect.TIMEOUT, '[P|p]assword:'])
            if ret_inner == 0:
                print('[-] Error Connecting')
                return
        child.sendline(self.password)
        child.expect(PROMPT)
        return child

    def send_command(self, cmd):
        self.session.sendline(cmd)
        self.session.expect(PROMPT)
        return self.session.before


def add_client(host, user, password):
    global bot_array
    client_obj = Client(host, user, password)
    bot_array.append(client_obj)


def botnet_command(cmd):
    global bot_array
    for client in bot_array:
        print(client.host)
        output = client.send_command(cmd)
        print(output)


def main():
    host = '192.168.140.128'
    add_client(host, 'user', 'user')
    add_client(host, 'service', 'service')
    botnet_command('pwd')
    botnet_command('uname -v')


if __name__ == '__main__':
    main()
